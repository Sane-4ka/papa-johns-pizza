{"version":3,"file":"static/js/211.f7ff764c.chunk.js","mappings":"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","sources":["../node_modules/react-content-loader/src/shared/uid.ts","../node_modules/react-content-loader/src/web/Svg.tsx","../node_modules/react-content-loader/src/web/ContentLoader.tsx","../node_modules/react-content-loader/src/web/presets/FacebookStyle.tsx","components/Skeleton/PizzaSkeleton.js","components/main/pizza/PizzaItem.js","components/main/pizza/PizzaList.js"],"sourcesContent":["export default (): string =>\n  Math.random()\n    .toString(36)\n    .substring(6)\n","import * as React from 'react'\n\nimport uid from '../shared/uid'\nimport { IContentLoaderProps } from './'\n\nconst SVG: React.FC<IContentLoaderProps> = ({\n  animate,\n  animateBegin,\n  backgroundColor,\n  backgroundOpacity,\n  baseUrl,\n  children,\n  foregroundColor,\n  foregroundOpacity,\n  gradientRatio,\n  gradientDirection,\n  uniqueKey,\n  interval,\n  rtl,\n  speed,\n  style,\n  title,\n  beforeMask,\n  ...props\n}) => {\n  const fixedId = uniqueKey || uid()\n  const idClip = `${fixedId}-diff`\n  const idGradient = `${fixedId}-animated-diff`\n  const idAria = `${fixedId}-aria`\n\n  const rtlStyle = rtl ? { transform: 'scaleX(-1)' } : null\n  const keyTimes = `0; ${interval}; 1`\n  const dur = `${speed}s`\n  const gradientTransform =\n    gradientDirection === 'top-bottom' ? 'rotate(90)' : undefined\n\n  return (\n    <svg\n      aria-labelledby={idAria}\n      role=\"img\"\n      style={{ ...style, ...rtlStyle }}\n      {...props}\n    >\n      {title ? <title id={idAria}>{title}</title> : null}\n      {beforeMask && React.isValidElement(beforeMask) ? beforeMask : null}\n      <rect\n        role=\"presentation\"\n        x=\"0\"\n        y=\"0\"\n        width=\"100%\"\n        height=\"100%\"\n        clipPath={`url(${baseUrl}#${idClip})`}\n        style={{ fill: `url(${baseUrl}#${idGradient})` }}\n      />\n\n      <defs>\n        <clipPath id={idClip}>{children}</clipPath>\n\n        <linearGradient id={idGradient} gradientTransform={gradientTransform}>\n          <stop\n            offset=\"0%\"\n            stopColor={backgroundColor}\n            stopOpacity={backgroundOpacity}\n          >\n            {animate && (\n              <animate\n                attributeName=\"offset\"\n                values={`${-gradientRatio}; ${-gradientRatio}; 1`}\n                keyTimes={keyTimes}\n                dur={dur}\n                repeatCount=\"indefinite\"\n                begin={animateBegin}\n              />\n            )}\n          </stop>\n\n          <stop\n            offset=\"50%\"\n            stopColor={foregroundColor}\n            stopOpacity={foregroundOpacity}\n          >\n            {animate && (\n              <animate\n                attributeName=\"offset\"\n                values={`${-gradientRatio / 2}; ${-gradientRatio / 2}; ${1 +\n                  gradientRatio / 2}`}\n                keyTimes={keyTimes}\n                dur={dur}\n                repeatCount=\"indefinite\"\n                begin={animateBegin}\n              />\n            )}\n          </stop>\n\n          <stop\n            offset=\"100%\"\n            stopColor={backgroundColor}\n            stopOpacity={backgroundOpacity}\n          >\n            {animate && (\n              <animate\n                attributeName=\"offset\"\n                values={`0; 0; ${1 + gradientRatio}`}\n                keyTimes={keyTimes}\n                dur={dur}\n                repeatCount=\"indefinite\"\n                begin={animateBegin}\n              />\n            )}\n          </stop>\n        </linearGradient>\n      </defs>\n    </svg>\n  )\n}\n\nSVG.defaultProps = {\n  animate: true,\n  backgroundColor: '#f5f6f7',\n  backgroundOpacity: 1,\n  baseUrl: '',\n  foregroundColor: '#eee',\n  foregroundOpacity: 1,\n  gradientRatio: 2,\n  gradientDirection: 'left-right',\n  id: null,\n  interval: 0.25,\n  rtl: false,\n  speed: 1.2,\n  style: {},\n  title: 'Loading...',\n  beforeMask: null,\n}\n\nexport default SVG\n","import * as React from 'react'\n\nimport { Facebook, IContentLoaderProps } from '.'\nimport Svg from './Svg'\n\nconst ContentLoader: React.FC<IContentLoaderProps> = props =>\n  props.children ? <Svg {...props} /> : <Facebook {...props} />\n\nexport default ContentLoader\n","import * as React from 'react'\n\nimport { IContentLoaderProps } from '..'\nimport ContentLoader from '../ContentLoader'\n\nconst ReactContentLoaderFacebook: React.FC<IContentLoaderProps> = props => (\n  <ContentLoader viewBox=\"0 0 476 124\" {...props}>\n    <rect x=\"48\" y=\"8\" width=\"88\" height=\"6\" rx=\"3\" />\n    <rect x=\"48\" y=\"26\" width=\"52\" height=\"6\" rx=\"3\" />\n    <rect x=\"0\" y=\"56\" width=\"410\" height=\"6\" rx=\"3\" />\n    <rect x=\"0\" y=\"72\" width=\"380\" height=\"6\" rx=\"3\" />\n    <rect x=\"0\" y=\"88\" width=\"178\" height=\"6\" rx=\"3\" />\n    <circle cx=\"20\" cy=\"20\" r=\"20\" />\n  </ContentLoader>\n)\n\nexport default ReactContentLoaderFacebook\n","import React from \"react\"\r\nimport ContentLoader from \"react-content-loader\"\r\n\r\nconst PizzaSkeleton = (props) => (\r\n  <ContentLoader \r\n    speed={2}\r\n    width={291}\r\n    height={532}\r\n    viewBox=\"0 0 291 532\"\r\n    backgroundColor=\"#f3f3f3\"\r\n    foregroundColor=\"#ecebeb\"\r\n    {...props}\r\n  >\r\n    <rect x=\"1\" y=\"237\" rx=\"10\" ry=\"10\" width=\"232\" height=\"48\" /> \r\n    <rect x=\"4\" y=\"291\" rx=\"10\" ry=\"10\" width=\"140\" height=\"39\" /> \r\n    <rect x=\"6\" y=\"336\" rx=\"10\" ry=\"10\" width=\"100\" height=\"33\" /> \r\n    <rect x=\"6\" y=\"376\" rx=\"10\" ry=\"10\" width=\"125\" height=\"33\" /> \r\n    <rect x=\"139\" y=\"377\" rx=\"10\" ry=\"10\" width=\"125\" height=\"33\" /> \r\n    <circle cx=\"114\" cy=\"114\" r=\"114\" />\r\n  </ContentLoader>\r\n)\r\n\r\nexport default PizzaSkeleton","import React, {useState, useEffect} from 'react'\r\n// import {BsPlus} from 'react-icons/bs'\r\n// import { addItemToCard } from '../../../redux/actions';\r\nimport { addItemToCard } from '../../../redux/slice/cartSlice';\r\n\r\nconst PizzaItem = ({dispatch, itemData}) => {\r\n    const [size, setSize] = useState([]);\r\n    const [currentType, setCurrentType] = useState('Традиционное')\r\n            // arr with size ids\r\n    const [currentId, setCurrentId] = useState(0)\r\n        // arr with variation ids\r\n    const [variationIds, setVariationIds] = useState([])\r\n    const {name, description, variations} = itemData\r\n    const iDid = itemData.id\r\n\r\n    useEffect(() => {\r\n        setType()\r\n    }, []);\r\n\r\n    const setType = (value = currentType) => {\r\n        \r\n        setCurrentType(value)\r\n        setCurrentId(currentId)\r\n        setSize([])\r\n        setVariationIds([])\r\n        setCurrentId(0)\r\n        variations.forEach((item, i) => {\r\n            if (item.stuffed_crust === 'none' && item.dough === value) {\r\n                setSize(size => [...size, item.size.value])\r\n                setVariationIds(state => [...state, i])\r\n            }\r\n        })\r\n    }\r\n\r\n    const renderSizes = () => {\r\n        return (size.map((size, i) => {\r\n            // return !size ? <span>Данного вида нет в продаже</span> :\r\n            return <span key={`${name}_${i}`} onClick={() => setCurrentId(i)} className={i === currentId ? `filter-size-item active` : 'filter-size-item' }>{size}cm</span>\r\n        }))\r\n    }\r\n\r\n    const onAddToCart = (currentVariation) => {\r\n        // console.log({currentVariation, iDid})\r\n        const {id , price, image_list, diameter, dough} = currentVariation\r\n        dispatch(addItemToCard({id, price, image_list, diameter, dough, name, iDid}))\r\n    }\r\n\r\n    const makeContent = () => {\r\n        let varId = variations[variationIds[currentId]]\r\n        // return !!varId?.kind.id && (\r\n        return (\r\n        <div className=\"pizza-block\">\r\n            <div className=\"pizza-block-img\">\r\n                <img src={varId?.image_list} alt=\"\" className=\"pizza-image\" />\r\n            </div>\r\n            <hr/>\r\n            <h3 className=\"pizza-title\">{name}</h3>\r\n            <div className=\"pizza-description\">{description}</div>\r\n            <div className=\"pizza-filter\">\r\n                <div className=\"pizza-filter-size\">\r\n                    <div className={currentType === 'Традиционное' ? `filter-size-item active` : 'filter-size-item'} \r\n                        data-type='Традиционное' \r\n                        onClick={(e) => setType(e.target.getAttribute('data-type'))}\r\n                        >Традиционное\r\n                    </div>\r\n                    <div className={currentType === 'Тонкое'? `filter-size-item active` : 'filter-size-item'} \r\n                        data-type='Тонкое' \r\n                        onClick={(e) => setType(e.target.getAttribute('data-type'))}\r\n                        >Тонкое\r\n                    </div>\r\n                </div>\r\n                <div className=\"pizza-filter-size\">\r\n                    {renderSizes()}\r\n                </div>\r\n                {/* <div className=\"pizza-filter-board\">\r\n                    <BsPlus style={{fontSize: '22px'}}/>\r\n                    <span>Crispy board 30cm</span>\r\n                    <p className=\"pizza-filter-board-price\">4.5 BYN</p>\r\n                </div> */}\r\n            </div>\r\n            <div className=\"pizza-footer\">\r\n                <button className=\"pizza-footer-btn\" onClick={() => onAddToCart(varId)}>Add to basket</button>\r\n                <span className=\"pizza-footer-price\">{varId? varId.price : null} BYN</span>\r\n            </div>\r\n        </div>\r\n        )\r\n    }\r\n\r\n    const elements = makeContent()\r\n    \r\n   return (\r\n        <React.Fragment>\r\n        {elements}\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default PizzaItem","import React from 'react'\r\nimport { useEffect, useState } from 'react'\r\nimport { useSelector } from 'react-redux'\r\n\r\nimport PizzaSkeleton from '../../Skeleton/PizzaSkeleton'\r\nimport PizzaItem from './PizzaItem'\r\n\r\nconst PizzaList = ({dispatch}) => {\r\n    const [filteredGoods, setFilteredGoods] = useState([]);\r\n    const {goods, goodsLoadingStatus, status} = useSelector(state => state.goods)\r\n    const {activePizzaFilter} = useSelector(state => state.pizzaFilters)\r\n    \r\n    const filterIt = () => {\r\n        activePizzaFilter !== 'all' ?\r\n        setFilteredGoods(goods[0]?.goods.filter((item, i) => {\r\n            return item.types.some(type => type.code === activePizzaFilter)\r\n        })) : setFilteredGoods(goods[0]?.goods)\r\n    }\r\n\r\n    useEffect(() => {\r\n        goods.length !== 0 && status === 'success' && filterIt()\r\n        // goods.length !== 0 && goodsLoadingStatus === 'idle' && filterIt()\r\n    }, [goods, activePizzaFilter]);\r\n\r\n    const skeletons = [...new Array(9)].map((_, index) => <PizzaSkeleton key={index} />)\r\n    \r\n    function renderItem(data = goods) {\r\n        return data.map((item, i) => <PizzaItem dispatch={dispatch} itemData={item} key={`${item.name}_X`} /> )\r\n    } \r\n    \r\n\r\n    if (status === 'error') {\r\n        return (\r\n            <h2>Smth went wrong</h2>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className=\"pizza\">\r\n            {status === 'success'? renderItem(filteredGoods): skeletons}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PizzaList;"],"names":["SVG","_a","animate","animateBegin","backgroundColor","backgroundOpacity","baseUrl","children","foregroundColor","foregroundOpacity","gradientRatio","gradientDirection","uniqueKey","interval","rtl","speed","style","title","beforeMask","props","fixedId","Math","random","toString","substring","idClip","idGradient","idAria","rtlStyle","transform","keyTimes","dur","gradientTransform","undefined","React.createElement","role","id","React.isValidElement","x","y","width","height","clipPath","fill","offset","stopColor","stopOpacity","attributeName","values","repeatCount","begin","defaultProps","ContentLoader","Svg","__assign","Facebook","ReactContentLoaderFacebook","viewBox","rx","cx","cy","r","ry","dispatch","itemData","useState","size","setSize","currentType","setCurrentType","currentId","setCurrentId","variationIds","setVariationIds","name","description","variations","iDid","useEffect","setType","value","forEach","item","i","stuffed_crust","dough","state","elements","varId","className","src","image_list","alt","onClick","e","target","getAttribute","map","currentVariation","price","diameter","addItemToCard","onAddToCart","makeContent","filteredGoods","setFilteredGoods","useSelector","goods","status","goodsLoadingStatus","activePizzaFilter","pizzaFilters","length","filter","types","some","type","code","filterIt","skeletons","Array","_","index","data","renderItem"],"sourceRoot":""}